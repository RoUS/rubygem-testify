MANIFEST=@PACKAGE_FILES@

#
# Shouldn't need to change anything below this line.
#
PACKAGE=autoresponder
VERSION=@PACKAGE_VERSION@
PACKAGEDIR=autoresponder
prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
sbindir=@sbindir@
libexecdir=@libexecdir@
mandir=@mandir@
man1dir=@mandir@/man1
mansubdir=@mansubdir@
sysconfdir=@sysconfdir@
piddir=@piddir@
srcdir=@srcdir@
top_srcdir=@top_srcdir@
INSTALL=@INSTALL@

SHELL = /bin/sh
CHMOD = chmod
CP = cp
MV = mv
LN = ln
LN_S = ln -s
NOOP = $(SHELL) -c true
NOECHO = @
RM_F = rm -f
RM_RF = rm -rf
TEST_F = test -f
TOUCH = touch
UMASK_NULL = umask 0
DEV_NULL = > /dev/null 2>&1
MKPATH = $(PERLRUN) "-MExtUtils::Command" -e mkpath
EQUALIZE_TIMESTAMP = $(PERLRUN) "-MExtUtils::Command" -e eqtime
ECHO = echo
ECHO_N = echo -n
UNINST = 0
VERBINST = 0
MOD_INSTALL = $(PERLRUN) -MExtUtils::Install -e 'install({@ARGV}, '\''$(VERBINST)'\'', 0, '\''$(UNINST)'\'');'
DOC_INSTALL = $(PERLRUN) "-MExtUtils::Command::MM" -e perllocal_install
UNINSTALL = $(PERLRUN) "-MExtUtils::Command::MM" -e uninstall
WARN_IF_OLD_PACKLIST = $(PERLRUN) "-MExtUtils::Command::MM" -e warn_if_old_packlist
PERL = /usr/bin/perl
FULLPERL = /usr/bin/perl
ABSPERL = $(PERL)
PERLRUN = $(PERL)
FULLPERLRUN = $(FULLPERL)
ABSPERLRUN = $(ABSPERL)
PERLRUNINST = $(PERLRUN) "-I$(INST_ARCHLIB)" "-I$(INST_LIB)"
FULLPERLRUNINST = $(FULLPERLRUN) "-I$(INST_ARCHLIB)" "-I$(INST_LIB)"
ABSPERLRUNINST = $(ABSPERLRUN) "-I$(INST_ARCHLIB)" "-I$(INST_LIB)"
PERL_CORE = 0
PERM_RW = 644
PERM_RWX = 755


DESTDIR=
VPATH=@srcdir@
TARBALL=$(PACKAGE)-$(VERSION).tar
DISTFILE=$(TARBALL).gz

all : test localisation
	$(NOECHO) exit $$?

localisation ::
	cd l10n/ && $(MAKE)

install : autoresponder autoresponder.1
	$(NOECHO) $(ECHO) "Installing applications..."
	$(NOECHO) $(INSTALL) -m 0755 autoresponder $(bindir)/autoresponder
	$(NOECHO) $(ECHO) "Installing documentation..."
	$(NOECHO) $(INSTALL) -m 0755 autoresponder.1 $(man1dir)/autoresponder.1
	$(NOECHO) $(ECHO) "autoresponder $(VERSION) installed."

#
# Making a distribution kit
#
TAR = tar
TARFLAGS = cvf
ZIP = zip
ZIPFLAGS = -r
COMPRESS = gzip --best
SUFFIX = .gz
SHAR = shar
PREOP = $(NOECHO) $(NOOP)
POSTOP = $(NOECHO) $(NOOP)
TO_UNIX = $(NOECHO) $(NOOP)

PACKAGELOC=$(PACKAGEDIR)-$(VERSION)
FILES=`$(ECHO) $(MANIFEST) | sed -e 's: : $(PACKAGELOC)/:g;s:^:$(PACKAGELOC)/:;'`

dist : $(DISTFILE)
	$(NOECHO) $(NOOP)

$(DISTFILE) : $(TARBALL)
	$(COMPRESS) $<

$(TARBALL) : $(MANIFEST)
	$(LN_S) ./ $(PACKAGELOC) \
		&& $(TAR) $(TARFLAGS) $(PACKAGELOC)/$@ $(FILES) ; \
		$(RM_F) $(PACKAGELOC)

#
# Testing stuff
#
LINKTYPE=dynamic
TEST_VERBOSE=0
TEST_TYPE=test_$(LINKTYPE)
TEST_FILE = test.pl
TEST_FILES = t/*.t
TESTDB_SW = -d

testdb :: testdb_$(LINKTYPE)

test :: $(TEST_TYPE)

test_dynamic :: pure_all
        PERL_DL_NONLAZY=1 $(FULLPERLRUN) "-MExtUtils::Command::MM" "-e" "test_harness($(TEST_VERBOSE), '$(INST_LIB)', '$(INST_ARCHLIB)')" $(TEST_FILES)

testdb_dynamic :: pure_all
        PERL_DL_NONLAZY=1 $(FULLPERLRUN) $(TESTDB_SW) "-I$(INST_LIB)" "-I$(INST_ARCHLIB)" $(TEST_FILE)

pure_all ::
	$(NOECHO) $(NOOP)

test_ : test_dynamic

test_static :: test_dynamic

